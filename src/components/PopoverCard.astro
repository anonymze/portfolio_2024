---
import HatPopoverSVG from "@assets/icons/hat-popover.svg?raw";

type Props =
	| {
			message: string;
			toTop?: true;
			toBottom?: false;
	  }
	| {
			message: string;
			toBottom?: true;
			toTop?: false;
	  };

const { message, toBottom } = Astro.props;
const unique_id = crypto.randomUUID();
const email = import.meta.env.PUBLIC_EMAIL;
---

<button popovertarget={unique_id}
	><slot />
	<div popover id={unique_id}></div>
	<div class:list={["fading-in", toBottom ? "to-bottom" : "to-top"]} set:html={HatPopoverSVG}>
		{message}
	</div>
</button>

<script is:inline define:vars={{ unique_id, email }}>
	document.querySelector("[popovertarget='" + `${unique_id}` + "']").addEventListener("click", async () => {
		await window.navigator.clipboard.writeText(email);
	});
</script>

<style>
	[popovertarget] {
		position: relative;
	}

	/* TODO hack because overlay: none is not really well implemented on browsers */
	[popover] + div {
		position: absolute;
		left: 50%;
		top: 3.2rem;
		transform: translate(-50%);
		z-index: 2;
		display: none;
		width: 14rem;
		height: auto;
		padding: 0.6rem;
		text-align: center;
		border-radius: 8px;
		background-color: var(--text-primary);
		color: var(--bg-primary);
		transition:
			opacity var(--default-transition-duration) ease-out,
			transform calc(var(--default-transition-duration) * 3) var(--transition-spring);

		@starting-style {
			opacity: 0;
			transform: translate(-50%, -1rem);
		}

		svg {
			position: absolute;
			left: 50%;
			transform: translate(-50%);
			top: -0.8rem;
			width: 2.4rem;
			height: 2.4rem;
			text-align: center;
			color: var(--text-primary);
		}

		&.to-top {
			top: -4rem;
			@starting-style {
				opacity: 0;
				transform: translate(-50%, 1rem);
			}
			svg {
				top: 0.8rem;
				transform: rotate(180deg) translate(50%);
			}
		}
	}

	[popover]:popover-open + div {
		display: block;
	}
</style>
